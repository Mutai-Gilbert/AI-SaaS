{"version":3,"sources":["../../../src/server/createGetAuth.test.ts"],"sourcesContent":["import { AuthStatus, constants } from '@clerk/backend';\nimport { NextRequest } from 'next/server';\n\nimport { createGetAuth, getAuth } from './createGetAuth';\n\n// { alg: 'HS256' }.{ sub: 'user-id' }.sig\nconst mockToken = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyLWlkIn0.0u5CllULtDVD9DUUmUMdJLbBCSNcnv4j3hCaPz4dNr8';\n\ndescribe('createGetAuth(opts)', () => {\n  it('returns a getAuth function', () => {\n    expect(createGetAuth({ debugLoggerName: 'test', noAuthStatusMessage: 'test' })).toBeInstanceOf(Function);\n  });\n});\n\ndescribe('getAuth(req)', () => {\n  it('parses and returns the token claims when signed in', () => {\n    const req = new NextRequest('https://www.clerk.com', {\n      headers: new Headers({\n        [constants.Headers.AuthStatus]: AuthStatus.SignedIn,\n        [constants.Headers.AuthToken]: mockToken,\n        [constants.Headers.AuthMessage]: 'message',\n        [constants.Headers.AuthReason]: 'reason',\n      }),\n    });\n\n    expect(getAuth(req).userId).toEqual('user-id');\n  });\n\n  it('parses and returns the token claims when signed out', () => {\n    const req = new NextRequest('https://www.clerk.com', {\n      headers: new Headers({\n        [constants.Headers.AuthStatus]: AuthStatus.SignedOut,\n        [constants.Headers.AuthMessage]: 'message',\n        [constants.Headers.AuthReason]: 'reason',\n      }),\n    });\n\n    expect(getAuth(req).userId).toEqual(null);\n  });\n\n  it('throws if auth status is not found', () => {\n    const req = new NextRequest('https://www.clerk.com', {\n      headers: new Headers({\n        [constants.Headers.AuthToken]: mockToken,\n      }),\n    });\n\n    expect(() => getAuth(req)).toThrowError();\n  });\n});\n"],"mappings":";AAAA,qBAAsC;AACtC,oBAA4B;AAE5B,2BAAuC;AAGvC,MAAM,YAAY;AAElB,SAAS,uBAAuB,MAAM;AACpC,KAAG,8BAA8B,MAAM;AACrC,eAAO,oCAAc,EAAE,iBAAiB,QAAQ,qBAAqB,OAAO,CAAC,CAAC,EAAE,eAAe,QAAQ;AAAA,EACzG,CAAC;AACH,CAAC;AAED,SAAS,gBAAgB,MAAM;AAC7B,KAAG,sDAAsD,MAAM;AAC7D,UAAM,MAAM,IAAI,0BAAY,yBAAyB;AAAA,MACnD,SAAS,IAAI,QAAQ;AAAA,QACnB,CAAC,yBAAU,QAAQ,UAAU,GAAG,0BAAW;AAAA,QAC3C,CAAC,yBAAU,QAAQ,SAAS,GAAG;AAAA,QAC/B,CAAC,yBAAU,QAAQ,WAAW,GAAG;AAAA,QACjC,CAAC,yBAAU,QAAQ,UAAU,GAAG;AAAA,MAClC,CAAC;AAAA,IACH,CAAC;AAED,eAAO,8BAAQ,GAAG,EAAE,MAAM,EAAE,QAAQ,SAAS;AAAA,EAC/C,CAAC;AAED,KAAG,uDAAuD,MAAM;AAC9D,UAAM,MAAM,IAAI,0BAAY,yBAAyB;AAAA,MACnD,SAAS,IAAI,QAAQ;AAAA,QACnB,CAAC,yBAAU,QAAQ,UAAU,GAAG,0BAAW;AAAA,QAC3C,CAAC,yBAAU,QAAQ,WAAW,GAAG;AAAA,QACjC,CAAC,yBAAU,QAAQ,UAAU,GAAG;AAAA,MAClC,CAAC;AAAA,IACH,CAAC;AAED,eAAO,8BAAQ,GAAG,EAAE,MAAM,EAAE,QAAQ,IAAI;AAAA,EAC1C,CAAC;AAED,KAAG,sCAAsC,MAAM;AAC7C,UAAM,MAAM,IAAI,0BAAY,yBAAyB;AAAA,MACnD,SAAS,IAAI,QAAQ;AAAA,QACnB,CAAC,yBAAU,QAAQ,SAAS,GAAG;AAAA,MACjC,CAAC;AAAA,IACH,CAAC;AAED,WAAO,UAAM,8BAAQ,GAAG,CAAC,EAAE,aAAa;AAAA,EAC1C,CAAC;AACH,CAAC;","names":[]}