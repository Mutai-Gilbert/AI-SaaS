{"version":3,"sources":["../../../src/app-beta/ClerkProvider.tsx"],"sourcesContent":["import { deprecated } from '@clerk/shared/deprecated';\n\ndeprecated(\n  '@clerk/nextjs/app-beta',\n  'Use imports from `@clerk/nextjs` instead.\\nFor more details, consult the middleware documentation: https://clerk.com/docs/nextjs/middleware',\n);\n/* eslint-disable turbo/no-undeclared-env-vars */\nimport type { IsomorphicClerkOptions } from '@clerk/clerk-react';\nimport type { InitialState, PublishableKeyOrFrontendApi } from '@clerk/types';\nimport React from 'react';\n\nimport { initialState } from './auth';\nimport { ClerkProvider as ClerkProviderClient } from './client/ClerkProvider';\n\ntype NextAppClerkProviderProps = {\n  children: React.ReactNode;\n} & Omit<IsomorphicClerkOptions, keyof PublishableKeyOrFrontendApi> &\n  Partial<PublishableKeyOrFrontendApi>;\n\n/**\n * @deprecated Use imports from `@clerk/nextjs` instead.\n * For more details, consult the middleware documentation: https://clerk.com/docs/nextjs/middleware\n */\nexport function ClerkProvider(props: NextAppClerkProviderProps) {\n  const state = (initialState()?.__clerk_ssr_state || { sessionId: null, orgId: null, userId: null }) as InitialState;\n  return (\n    // @ts-expect-error\n    <ClerkProviderClient\n      frontendApi={process.env.NEXT_PUBLIC_CLERK_FRONTEND_API || ''}\n      publishableKey={process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY || ''}\n      proxyUrl={process.env.NEXT_PUBLIC_CLERK_PROXY_URL}\n      initialState={state}\n      {...props}\n    />\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA2B;AAS3B,mBAAkB;AAElB,kBAA6B;AAC7B,2BAAqD;AAAA,IAVrD;AAAA,EACE;AAAA,EACA;AACF;AAkBO,SAAS,cAAc,OAAkC;AAC9D,QAAM,YAAS,0BAAa,GAAG,qBAAqB,EAAE,WAAW,MAAM,OAAO,MAAM,QAAQ,KAAK;AACjG;AAAA;AAAA,IAEE,6BAAAA,QAAA;AAAA,MAAC,qBAAAC;AAAA,MAAA;AAAA,QACC,aAAa,QAAQ,IAAI,kCAAkC;AAAA,QAC3D,gBAAgB,QAAQ,IAAI,qCAAqC;AAAA,QACjE,UAAU,QAAQ,IAAI;AAAA,QACtB,cAAc;AAAA,QACb,GAAG;AAAA;AAAA,IACN;AAAA;AAEJ;","names":["React","ClerkProviderClient"]}