{"version":3,"sources":["../../../src/server/createGetAuth.ts"],"sourcesContent":["import type { SignedInAuthObject, SignedOutAuthObject } from '@clerk/backend';\nimport { AuthStatus, constants, decodeJwt, signedInAuthObject, signedOutAuthObject } from '@clerk/backend';\nimport { deprecatedObjectProperty } from '@clerk/shared/deprecated';\nimport type { SecretKeyOrApiKey } from '@clerk/types';\n\nimport { withLogger } from '../utils/debugLogger';\nimport { API_KEY, API_URL, API_VERSION, SECRET_KEY } from './clerkClient';\nimport { getAuthAuthHeaderMissing } from './errors';\nimport type { AuthObjectWithDeprecatedResources, RequestLike } from './types';\nimport { getAuthKeyFromRequest, getCookie, getHeader } from './utils';\n\ntype GetAuthOpts = Partial<SecretKeyOrApiKey>;\n\nexport const createGetAuth = ({\n  debugLoggerName,\n  noAuthStatusMessage,\n}: {\n  noAuthStatusMessage: string;\n  debugLoggerName: string;\n}) =>\n  withLogger(debugLoggerName, logger => {\n    return (\n      req: RequestLike,\n      opts?: GetAuthOpts,\n    ):\n      | AuthObjectWithDeprecatedResources<SignedInAuthObject>\n      | AuthObjectWithDeprecatedResources<SignedOutAuthObject> => {\n      if (getHeader(req, constants.Headers.EnableDebug) === 'true') {\n        logger.enable();\n      }\n\n      // When the auth status is set, we trust that the middleware has already run\n      // Then, we don't have to re-verify the JWT here,\n      // we can just strip out the claims manually.\n      const authToken = getAuthKeyFromRequest(req, 'AuthToken') as string;\n      const authStatus = getAuthKeyFromRequest(req, 'AuthStatus') as AuthStatus;\n      const authMessage = getAuthKeyFromRequest(req, 'AuthMessage');\n      const authReason = getAuthKeyFromRequest(req, 'AuthReason');\n\n      logger.debug('Debug', {\n        authReason,\n        authMessage,\n        authStatus,\n        authToken,\n      });\n\n      if (!authStatus) {\n        throw new Error(noAuthStatusMessage);\n      }\n\n      const options = {\n        apiKey: opts?.apiKey || API_KEY,\n        authStatus,\n        authMessage,\n        secretKey: opts?.secretKey || SECRET_KEY,\n        authReason,\n        authToken,\n        apiUrl: API_URL,\n        apiVersion: API_VERSION,\n      };\n      logger.debug('Options debug', options);\n\n      if (authStatus !== AuthStatus.SignedIn) {\n        return signedOutAuthObject(options);\n      }\n\n      const jwt = decodeJwt(authToken);\n      logger.debug('JWT debug', jwt.raw.text);\n\n      const signedIn = signedInAuthObject(jwt.payload, {\n        ...options,\n        token: jwt.raw.text,\n      });\n\n      if (signedIn) {\n        if (signedIn.user) {\n          deprecatedObjectProperty(signedIn, 'user', 'Use `clerkClient.users.getUser` instead.');\n        }\n\n        if (signedIn.organization) {\n          deprecatedObjectProperty(\n            signedIn,\n            'organization',\n            'Use `clerkClient.organizations.getOrganization` instead.',\n          );\n        }\n\n        if (signedIn.session) {\n          deprecatedObjectProperty(signedIn, 'session', 'Use `clerkClient.sessions.getSession` instead.');\n        }\n      }\n\n      return signedIn;\n    };\n  });\n\nexport const parseJwt = (req: RequestLike) => {\n  const cookieToken = getCookie(req, constants.Cookies.Session);\n  const headerToken = getHeader(req, 'authorization')?.replace('Bearer ', '');\n  return decodeJwt(cookieToken || headerToken || '');\n};\n\nexport const getAuth = createGetAuth({\n  debugLoggerName: 'getAuth()',\n  noAuthStatusMessage: getAuthAuthHeaderMissing(),\n});\n"],"mappings":"AACA,SAAS,YAAY,WAAW,WAAW,oBAAoB,2BAA2B;AAC1F,SAAS,gCAAgC;AAGzC,SAAS,kBAAkB;AAC3B,SAAS,SAAS,SAAS,aAAa,kBAAkB;AAC1D,SAAS,gCAAgC;AAEzC,SAAS,uBAAuB,WAAW,iBAAiB;AAIrD,MAAM,gBAAgB,CAAC;AAAA,EAC5B;AAAA,EACA;AACF,MAIE,WAAW,iBAAiB,YAAU;AACpC,SAAO,CACL,KACA,SAG4D;AAC5D,QAAI,UAAU,KAAK,UAAU,QAAQ,WAAW,MAAM,QAAQ;AAC5D,aAAO,OAAO;AAAA,IAChB;AAKA,UAAM,YAAY,sBAAsB,KAAK,WAAW;AACxD,UAAM,aAAa,sBAAsB,KAAK,YAAY;AAC1D,UAAM,cAAc,sBAAsB,KAAK,aAAa;AAC5D,UAAM,aAAa,sBAAsB,KAAK,YAAY;AAE1D,WAAO,MAAM,SAAS;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAED,QAAI,CAAC,YAAY;AACf,YAAM,IAAI,MAAM,mBAAmB;AAAA,IACrC;AAEA,UAAM,UAAU;AAAA,MACd,QAAQ,MAAM,UAAU;AAAA,MACxB;AAAA,MACA;AAAA,MACA,WAAW,MAAM,aAAa;AAAA,MAC9B;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,MACR,YAAY;AAAA,IACd;AACA,WAAO,MAAM,iBAAiB,OAAO;AAErC,QAAI,eAAe,WAAW,UAAU;AACtC,aAAO,oBAAoB,OAAO;AAAA,IACpC;AAEA,UAAM,MAAM,UAAU,SAAS;AAC/B,WAAO,MAAM,aAAa,IAAI,IAAI,IAAI;AAEtC,UAAM,WAAW,mBAAmB,IAAI,SAAS;AAAA,MAC/C,GAAG;AAAA,MACH,OAAO,IAAI,IAAI;AAAA,IACjB,CAAC;AAED,QAAI,UAAU;AACZ,UAAI,SAAS,MAAM;AACjB,iCAAyB,UAAU,QAAQ,0CAA0C;AAAA,MACvF;AAEA,UAAI,SAAS,cAAc;AACzB;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAEA,UAAI,SAAS,SAAS;AACpB,iCAAyB,UAAU,WAAW,gDAAgD;AAAA,MAChG;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AACF,CAAC;AAEI,MAAM,WAAW,CAAC,QAAqB;AAC5C,QAAM,cAAc,UAAU,KAAK,UAAU,QAAQ,OAAO;AAC5D,QAAM,cAAc,UAAU,KAAK,eAAe,GAAG,QAAQ,WAAW,EAAE;AAC1E,SAAO,UAAU,eAAe,eAAe,EAAE;AACnD;AAEO,MAAM,UAAU,cAAc;AAAA,EACnC,iBAAiB;AAAA,EACjB,qBAAqB,yBAAyB;AAChD,CAAC;","names":[]}