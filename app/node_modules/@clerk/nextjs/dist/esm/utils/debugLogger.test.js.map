{"version":3,"sources":["../../../src/utils/debugLogger.test.ts"],"sourcesContent":["import { expectTypeOf } from 'expect-type';\n\nimport { withLogger } from './debugLogger';\n\ndescribe('withLogger', () => {\n  let logger: any;\n\n  beforeEach(() => {\n    logger = {\n      enable: jest.fn(),\n      log: jest.fn(),\n      commit: jest.fn(),\n    };\n  });\n\n  it('should return the type of the passed handler', function () {\n    type Options = { name: string; test: number };\n    const handler = withLogger(\n      () => logger,\n      logger => (opts: Options) => {\n        logger.commit();\n        return opts.name;\n      },\n    );\n\n    expectTypeOf(handler).toMatchTypeOf<(opts: Options) => string>();\n  });\n\n  it('should log upon return of a sync function', function () {\n    const handler = withLogger(\n      () => logger,\n      logger => () => {\n        logger.enable();\n        logger.log('test');\n        return 'test';\n      },\n    );\n    expect(logger.enable).not.toHaveBeenCalled();\n    expect(logger.log).not.toHaveBeenCalled();\n    expect(logger.commit).not.toHaveBeenCalled();\n    handler();\n    expect(logger.enable).toHaveBeenCalled();\n    expect(logger.log).toHaveBeenCalled();\n    expect(logger.commit).toHaveBeenCalled();\n  });\n\n  it('should log before an error is thrown inside of a sync function', function () {\n    const handler = withLogger(\n      () => logger,\n      logger => () => {\n        logger.enable();\n        logger.log('test');\n        throw new Error();\n      },\n    );\n    expect(logger.enable).not.toHaveBeenCalled();\n    expect(logger.log).not.toHaveBeenCalled();\n    expect(logger.commit).not.toHaveBeenCalled();\n    try {\n      handler();\n    } catch (e) {\n      expect(e).toBeDefined();\n      expect(logger.enable).toHaveBeenCalled();\n      expect(logger.log).toHaveBeenCalled();\n      expect(logger.commit).toHaveBeenCalled();\n    }\n  });\n\n  it('should log upon return of a async function', async function () {\n    const handler = withLogger(\n      () => logger,\n      logger => async () => {\n        logger.enable();\n        logger.log('test');\n        const res = await new Promise(resolve => {\n          resolve('test');\n        });\n        return res;\n      },\n    );\n    expect(logger.enable).not.toHaveBeenCalled();\n    expect(logger.log).not.toHaveBeenCalled();\n    expect(logger.commit).not.toHaveBeenCalled();\n    await handler();\n    expect(logger.enable).toHaveBeenCalled();\n    expect(logger.log).toHaveBeenCalled();\n    expect(logger.commit).toHaveBeenCalled();\n  });\n\n  it('should log before an error is thrown inside of an async function', async function () {\n    const handler = withLogger(\n      () => logger,\n      logger => async () => {\n        logger.enable();\n        logger.log('test');\n        const res = await new Promise((_, reject) => {\n          reject(new Error());\n        });\n        return res;\n      },\n    );\n    expect(logger.enable).not.toHaveBeenCalled();\n    expect(logger.log).not.toHaveBeenCalled();\n    expect(logger.commit).not.toHaveBeenCalled();\n    try {\n      await handler();\n    } catch (e) {\n      expect(e).toBeDefined();\n      expect(logger.enable).toHaveBeenCalled();\n      expect(logger.log).toHaveBeenCalled();\n      expect(logger.commit).toHaveBeenCalled();\n    }\n  });\n\n  it('should truncate bytes to 4096 when deploying on vercel', () => {\n    // setup: mock vercel environment, mock console log so we can intercept its value\n    process.env.VERCEL = 'true';\n    const oldConsoleLog = console.log.bind(console);\n    const log = jest.fn();\n    console.log = log;\n\n    const veryLongString = new Array(6000).join('a');\n    const handler = withLogger('test-logger', logger => () => {\n      logger.enable();\n      logger.debug(veryLongString);\n      logger.debug(veryLongString);\n    });\n    handler();\n\n    for (const mockCall of log.mock.calls) {\n      expect(mockCall[0].length).toBeLessThanOrEqual(4096);\n    }\n\n    // restore original console log and reset environment value\n    process.env.VERCEL = undefined;\n    console.log = oldConsoleLog;\n  });\n});\n"],"mappings":"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","names":["logger"]}